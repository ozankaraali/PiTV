name: Build/Release

on:
  push:
    branches: [main, dev]
    tags:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 15.x
      - run: yarn
      - run: yarn make

      - name: Upload macOS .app
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.os }}
          path: out/make/

  create-release:
    needs: [build]
    runs-on: "ubuntu-latest"
    # if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download Windows Artifact
        uses: actions/download-artifact@v1
        with:
          name: "macos-latest"

      - name: Download Linux Artifact
        uses: actions/download-artifact@v1
        with:
          name: "ubuntu-latest"

      - name: Download MacOS Artifact
        uses: actions/download-artifact@v1
        with:
          name: "windows-latest"
      
      - name: Make Latest Release
        uses: "marvinpinto/action-automatic-releases@latest"
        # if: ${{ github.event_name == 'push' }}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          draft: false
          prerelease: true
          files: |
            windows-latest/**/*
            ubuntu-latest/**/*
            macos-latest/**/*
          title: "PiTV Development Build"

      - name: Extract Tag
        id: tag
        if: startsWith(github.ref, 'refs/tags/')
        run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}

      - name: Make Versioned Release
        uses: "marvinpinto/action-automatic-releases@latest"
        if: startsWith(github.ref, 'refs/tags/')
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ steps.tag.outputs.TAG }}
          draft: false
          prerelease: false
          files: |
            windows-latest/**/*
            ubuntu-latest/**/*
            macos-latest/**/*
          title: "PiTV Stable: ${{ steps.tag.outputs.TAG }}"
